version: 2.1

jobs:
  build:
    docker:
      - image: cimg/python:3.10.14
      - image: cimg/postgres:13.3
        environment:
          POSTGRES_USER: circleci
          POSTGRES_PASSWORD: $DATABASE_PASSWORD
          POSTGRES_DB: $DATABASE_NAME
          POSTGRES_HOST_AUTH_METHOD: trust
    environment:
      DATABASE_NAME: $DATABASE_NAME
      DATABASE_USER: $DATABASE_USER
      DATABASE_PASSWORD: $DATABASE_PASSWORD
      SECRET_KEY: $SECRET_KEY
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
    steps:
      - checkout
      - run:
          name: Install dockerize
          command: apk add --no-cache dockerize
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://postgres:5432 -timeout 1m
      - run:
          name: Create PostgreSQL Role and Database
          command: |
            docker exec postgres psql -U circleci -c "CREATE USER $DATABASE_USER WITH PASSWORD '$DATABASE_PASSWORD';"
            docker exec postgres psql -U circleci -c "CREATE DATABASE $DATABASE_NAME OWNER $DATABASE_USER;"
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: Install Dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Run Migrations
          command: |
            . venv/bin/activate
            python manage.py migrate
      - run:
          name: Run Tests
          command: |
            . venv/bin/activate 
            python manage.py test

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
